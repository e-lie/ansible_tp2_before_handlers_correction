- hosts: appservers
  become: yes

  vars:
    app:
      name: hello
      user: flask 
      domain: hello.test

  tasks:
    - name: update apt cache
      apt:
        update_cache: yes

    - name: ensure basic apps present
      apt:
        name:
          - python3-dev
          - python3-pip
          - python3-virtualenv
          - virtualenv
          - nginx
          - git
        state: present

    - name: ensure nginx started
      systemd:
        name: nginx
        state: started

    - name: "add the user {{ app.user }}"
      user:
        name: "{{ app.user }}"
        state: present
        append: yes # important pour ne pas supprimer les groupes d'un utilisateur existant
        groups:
        - "www-data"

    - name: git get app files
      git:
        repo: "https://github.com/e-lie/flask_hello_ansible.git"
        dest: /home/{{ app.user }}/{{ app.name }}
        version: "master"
        clone: yes
        update: no

    - name: install modules in a virtualenv
      pip:
        requirements: /home/{{ app.user }}/{{ app.name }}/requirements.txt
        virtualenv: /home/{{ app.user }}/{{ app.name }}/venv
        virtualenv_python: python3

    - name: change permissions of app directory
      file:
        path: /home/{{ app.user }}/{{ app.name }}
        state: directory
        owner: "{{ app.user }}"
        recurse: true

    - name: template systemd service config
      template:
        src: templates/app.service.j2
        dest: /etc/systemd/system/{{ app.name }}.service

    - name: start systemd app service
      systemd:
        name: "{{ app.name }}.service"
        state: restarted
        enabled: yes

    - name: template nginx site config
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/sites-available/{{ app.domain }}.conf

    - name: remove default nginx site config
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: enable nginx site
      file:
        src: /etc/nginx/sites-available/{{ app.domain }}.conf
        dest: /etc/nginx/sites-enabled/{{ app.domain }}.conf
        state: link
        force: yes

    - name: restart  nginx service
      systemd:
        name: "nginx"
        state: restarted
        enabled: yes